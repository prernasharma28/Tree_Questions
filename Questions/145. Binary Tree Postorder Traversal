QUESTION 3 : Binary Tree Postorder Traversal .

Given the root of a binary tree, return the postorder traversal of its nodes' values.

Example 1:
Input: root = [1,null,2,3]
Output: [3,2,1]

Example 2:
Input: root = []
Output: []

Example 3:
Input: root = [1]
Output: [1]

Constraints:
    The number of the nodes in the tree is in the range [0, 100].
    -100 <= Node.val <= 100




SOLUTION : 

class Solution {
public:
    void postorder(TreeNode* root,vector<int>&ar){
        if(root==NULL){
            return;
        }
        postorder(root->left,ar);
        postorder(root->right,ar);
        ar.push_back(root->val);
    }
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>ar;
        postorder(root,ar);
        return ar;
    }
};

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
