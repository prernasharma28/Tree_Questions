QUESTION : Right View Of Tree . 

Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Example 1:
Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]

Example 2:
Input: root = [1,null,3]
Output: [1,3]

Example 3:
Input: root = []
Output: []

Constraints:
    The number of nodes in the tree is in the range [0, 100].
    -100 <= Node.val <= 100



SOLUTION : 

class Solution {
public:
    void rightv(TreeNode* root, int level, vector<int>& ds) {
        if (root == NULL) {
            return;
        }
        if (level == ds.size())
            ds.push_back(root->val);
        rightv(root->right, level + 1, ds);
        rightv(root->left, level + 1, ds);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ds;
        rightv(root, 0, ds);
        return ds;
    }
};

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

